package info.xudshen.jandan.data.model.observable;

import info.xudshen.data.BR;

import com.google.gson.annotations.Expose;
import info.xudshen.droiddata.dao.IModelObservable;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import android.databinding.Bindable;

import info.xudshen.jandan.domain.model.Article;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * IModelObservable<"ARTICLE">
 */
public class ArticleObservable extends android.databinding.BaseObservable  implements IModelObservable<Article> {

    private Long id;
    @Expose
    private Long articleId;
    @Expose
    private String title;
    @Expose
    private String author;
    @Expose
    private Timestamp time;
    @Expose
    private String content;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public ArticleObservable() {
    }

    public ArticleObservable(Long id) {
        this.id = id;
    }

    public ArticleObservable(Long id, Long articleId, String title, String author, Timestamp time, String content) {
        this.id = id;
        this.articleId = articleId;
        this.title = title;
        this.author = author;
        this.time = time;
        this.content = content;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getArticleId() {
        return articleId;
    }

    public void setArticleId(Long articleId) {
        this.articleId = articleId;
    }

    @Bindable
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        if ((this.title == null && title != null)
                || (this.title != null && !this.title.equals(title))) {
            this.title = title;
            notifyPropertyChanged(BR.title);
        }
    }

    @Bindable
    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        if ((this.author == null && author != null)
                || (this.author != null && !this.author.equals(author))) {
            this.author = author;
            notifyPropertyChanged(BR.author);
        }
    }

    public Timestamp getTime() {
        return time;
    }

    public void setTime(Timestamp time) {
        this.time = time;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }


    /**
     * convert entity to entityObservable
     */
    public ArticleObservable(Article entity) {
        this.id = entity.getId();
        this.articleId = entity.getArticleId();
        this.title = entity.getTitle();
        this.author = entity.getAuthor();
        this.time = entity.getTime();
        this.content = entity.getContent();
    }

    @Override
    public Long getModelKey() {
        return this.getId();
    }

    @Override
    public void refresh(Article entity) {
        List<Integer> propertyChanges = new ArrayList<>();
        this.id = entity.getId();
        this.articleId = entity.getArticleId();
        if ((this.title == null && entity.getTitle() != null)
                || (this.title != null && !this.title.equals(entity.getTitle()))) {
            this.title = entity.getTitle();
            propertyChanges.add(BR.title);
        }
        if ((this.author == null && entity.getAuthor() != null)
                || (this.author != null && !this.author.equals(entity.getAuthor()))) {
            this.author = entity.getAuthor();
            propertyChanges.add(BR.author);
        }
        this.time = entity.getTime();
        this.content = entity.getContent();

        if (propertyChanges.size() == 1) {
            notifyPropertyChanged(propertyChanges.get(0));
        } else if (propertyChanges.size() > 1) {
            notifyChange();
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
