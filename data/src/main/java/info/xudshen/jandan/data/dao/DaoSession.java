package info.xudshen.jandan.data.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import info.xudshen.jandan.domain.model.Post;
import info.xudshen.jandan.domain.model.Author;
import info.xudshen.jandan.domain.model.Comment;

import info.xudshen.jandan.data.dao.PostDao;
import info.xudshen.jandan.data.dao.AuthorDao;
import info.xudshen.jandan.data.dao.CommentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    public DaoSession setContext(Context context) {
        postDao.setContext(context);
        authorDao.setContext(context);
        commentDao.setContext(context);
        return this;
    }

    private final DaoConfig postDaoConfig;
    private final DaoConfig authorDaoConfig;
    private final DaoConfig commentDaoConfig;

    private final PostDao postDao;
    private final AuthorDao authorDao;
    private final CommentDao commentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        postDaoConfig = daoConfigMap.get(PostDao.class).clone();
        postDaoConfig.initIdentityScope(type);

        authorDaoConfig = daoConfigMap.get(AuthorDao.class).clone();
        authorDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        postDao = new PostDao(postDaoConfig, this);
        authorDao = new AuthorDao(authorDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);

        registerDao(Post.class, postDao);
        registerDao(Author.class, authorDao);
        registerDao(Comment.class, commentDao);
    }
    
    public void clear() {
        postDaoConfig.getIdentityScope().clear();
        authorDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
    }

    public PostDao getPostDao() {
        return postDao;
    }

    public AuthorDao getAuthorDao() {
        return authorDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

}
