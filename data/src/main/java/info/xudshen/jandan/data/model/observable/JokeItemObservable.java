package info.xudshen.jandan.data.model.observable;

import info.xudshen.data.BR;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import info.xudshen.droiddata.dao.IModelObservable;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import android.databinding.Bindable;

import info.xudshen.jandan.domain.model.JokeItem;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * IModelObservable<"JOKE_ITEM">
 */
public class JokeItemObservable extends android.databinding.BaseObservable  implements IModelObservable<JokeItem> {

    private Long id;
    @Expose
    @SerializedName("comment_ID")
    private Long jokeId;
    @Expose
    @SerializedName("comment_author")
    private String author;
    @Expose
    @SerializedName("comment_author_email")
    private String authorEmail;
    @Expose
    @SerializedName("comment_author_url")
    private String authorUrl;
    @Expose
    @SerializedName("comment_date")
    private Timestamp date;
    @Expose
    private Long votePositive;
    @Expose
    private Long voteNegative;
    @Expose
    private Long commentCount;
    @Expose
    private String threadId;
    @Expose
    @SerializedName("comment_content")
    private String content;
    @Expose
    @SerializedName("text_content")
    private String textContent;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public JokeItemObservable() {
    }

    public JokeItemObservable(Long id) {
        this.id = id;
    }

    public JokeItemObservable(Long id, Long jokeId, String author, String authorEmail, String authorUrl, Timestamp date, Long votePositive, Long voteNegative, Long commentCount, String threadId, String content, String textContent) {
        this.id = id;
        this.jokeId = jokeId;
        this.author = author;
        this.authorEmail = authorEmail;
        this.authorUrl = authorUrl;
        this.date = date;
        this.votePositive = votePositive;
        this.voteNegative = voteNegative;
        this.commentCount = commentCount;
        this.threadId = threadId;
        this.content = content;
        this.textContent = textContent;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Bindable
    public Long getJokeId() {
        return jokeId;
    }

    public void setJokeId(Long jokeId) {
        if ((this.jokeId == null && jokeId != null)
                || (this.jokeId != null && !this.jokeId.equals(jokeId))) {
            this.jokeId = jokeId;
            notifyPropertyChanged(BR.jokeId);
        }
    }

    @Bindable
    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        if ((this.author == null && author != null)
                || (this.author != null && !this.author.equals(author))) {
            this.author = author;
            notifyPropertyChanged(BR.author);
        }
    }

    @Bindable
    public String getAuthorEmail() {
        return authorEmail;
    }

    public void setAuthorEmail(String authorEmail) {
        if ((this.authorEmail == null && authorEmail != null)
                || (this.authorEmail != null && !this.authorEmail.equals(authorEmail))) {
            this.authorEmail = authorEmail;
            notifyPropertyChanged(BR.authorEmail);
        }
    }

    @Bindable
    public String getAuthorUrl() {
        return authorUrl;
    }

    public void setAuthorUrl(String authorUrl) {
        if ((this.authorUrl == null && authorUrl != null)
                || (this.authorUrl != null && !this.authorUrl.equals(authorUrl))) {
            this.authorUrl = authorUrl;
            notifyPropertyChanged(BR.authorUrl);
        }
    }

    @Bindable
    public Timestamp getDate() {
        return date;
    }

    public void setDate(Timestamp date) {
        if ((this.date == null && date != null)
                || (this.date != null && !this.date.equals(date))) {
            this.date = date;
            notifyPropertyChanged(BR.date);
        }
    }

    @Bindable
    public Long getVotePositive() {
        return votePositive;
    }

    public void setVotePositive(Long votePositive) {
        if ((this.votePositive == null && votePositive != null)
                || (this.votePositive != null && !this.votePositive.equals(votePositive))) {
            this.votePositive = votePositive;
            notifyPropertyChanged(BR.votePositive);
        }
    }

    @Bindable
    public Long getVoteNegative() {
        return voteNegative;
    }

    public void setVoteNegative(Long voteNegative) {
        if ((this.voteNegative == null && voteNegative != null)
                || (this.voteNegative != null && !this.voteNegative.equals(voteNegative))) {
            this.voteNegative = voteNegative;
            notifyPropertyChanged(BR.voteNegative);
        }
    }

    @Bindable
    public Long getCommentCount() {
        return commentCount;
    }

    public void setCommentCount(Long commentCount) {
        if ((this.commentCount == null && commentCount != null)
                || (this.commentCount != null && !this.commentCount.equals(commentCount))) {
            this.commentCount = commentCount;
            notifyPropertyChanged(BR.commentCount);
        }
    }

    @Bindable
    public String getThreadId() {
        return threadId;
    }

    public void setThreadId(String threadId) {
        if ((this.threadId == null && threadId != null)
                || (this.threadId != null && !this.threadId.equals(threadId))) {
            this.threadId = threadId;
            notifyPropertyChanged(BR.threadId);
        }
    }

    @Bindable
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        if ((this.content == null && content != null)
                || (this.content != null && !this.content.equals(content))) {
            this.content = content;
            notifyPropertyChanged(BR.content);
        }
    }

    @Bindable
    public String getTextContent() {
        return textContent;
    }

    public void setTextContent(String textContent) {
        if ((this.textContent == null && textContent != null)
                || (this.textContent != null && !this.textContent.equals(textContent))) {
            this.textContent = textContent;
            notifyPropertyChanged(BR.textContent);
        }
    }


    /**
     * convert entity to entityObservable
     */
    public JokeItemObservable(JokeItem entity) {
        this.id = entity.getId();
        this.jokeId = entity.getJokeId();
        this.author = entity.getAuthor();
        this.authorEmail = entity.getAuthorEmail();
        this.authorUrl = entity.getAuthorUrl();
        this.date = entity.getDate();
        this.votePositive = entity.getVotePositive();
        this.voteNegative = entity.getVoteNegative();
        this.commentCount = entity.getCommentCount();
        this.threadId = entity.getThreadId();
        this.content = entity.getContent();
        this.textContent = entity.getTextContent();
    }

    @Override
    public Long getModelKey() {
        return this.getId();
    }

    @Override
    public void refresh(JokeItem entity) {
        List<Integer> propertyChanges = new ArrayList<>();
        this.id = entity.getId();
        if ((this.jokeId == null && entity.getJokeId() != null)
                || (this.jokeId != null && !this.jokeId.equals(entity.getJokeId()))) {
            this.jokeId = entity.getJokeId();
            propertyChanges.add(BR.jokeId);
        }
        if ((this.author == null && entity.getAuthor() != null)
                || (this.author != null && !this.author.equals(entity.getAuthor()))) {
            this.author = entity.getAuthor();
            propertyChanges.add(BR.author);
        }
        if ((this.authorEmail == null && entity.getAuthorEmail() != null)
                || (this.authorEmail != null && !this.authorEmail.equals(entity.getAuthorEmail()))) {
            this.authorEmail = entity.getAuthorEmail();
            propertyChanges.add(BR.authorEmail);
        }
        if ((this.authorUrl == null && entity.getAuthorUrl() != null)
                || (this.authorUrl != null && !this.authorUrl.equals(entity.getAuthorUrl()))) {
            this.authorUrl = entity.getAuthorUrl();
            propertyChanges.add(BR.authorUrl);
        }
        if ((this.date == null && entity.getDate() != null)
                || (this.date != null && !this.date.equals(entity.getDate()))) {
            this.date = entity.getDate();
            propertyChanges.add(BR.date);
        }
        if ((this.votePositive == null && entity.getVotePositive() != null)
                || (this.votePositive != null && !this.votePositive.equals(entity.getVotePositive()))) {
            this.votePositive = entity.getVotePositive();
            propertyChanges.add(BR.votePositive);
        }
        if ((this.voteNegative == null && entity.getVoteNegative() != null)
                || (this.voteNegative != null && !this.voteNegative.equals(entity.getVoteNegative()))) {
            this.voteNegative = entity.getVoteNegative();
            propertyChanges.add(BR.voteNegative);
        }
        if ((this.commentCount == null && entity.getCommentCount() != null)
                || (this.commentCount != null && !this.commentCount.equals(entity.getCommentCount()))) {
            this.commentCount = entity.getCommentCount();
            propertyChanges.add(BR.commentCount);
        }
        if ((this.threadId == null && entity.getThreadId() != null)
                || (this.threadId != null && !this.threadId.equals(entity.getThreadId()))) {
            this.threadId = entity.getThreadId();
            propertyChanges.add(BR.threadId);
        }
        if ((this.content == null && entity.getContent() != null)
                || (this.content != null && !this.content.equals(entity.getContent()))) {
            this.content = entity.getContent();
            propertyChanges.add(BR.content);
        }
        if ((this.textContent == null && entity.getTextContent() != null)
                || (this.textContent != null && !this.textContent.equals(entity.getTextContent()))) {
            this.textContent = entity.getTextContent();
            propertyChanges.add(BR.textContent);
        }

        if (propertyChanges.size() == 1) {
            notifyPropertyChanged(propertyChanges.get(0));
        } else if (propertyChanges.size() > 1) {
            notifyChange();
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
