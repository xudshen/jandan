package info.xudshen.jandan.data.model.observable;

import info.xudshen.data.BR;

import com.google.gson.annotations.Expose;
import info.xudshen.droiddata.dao.IModelObservable;
import java.util.ArrayList;
import java.util.List;

import android.databinding.Bindable;

import info.xudshen.jandan.domain.model.Meta;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * IModelObservable<"META">
 */
public class MetaObservable extends android.databinding.BaseObservable  implements IModelObservable<Meta> {

    private Long id;
    @Expose
    private Long postPage;
    @Expose
    private Long picPage;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public MetaObservable() {
    }

    public MetaObservable(Long id) {
        this.id = id;
    }

    public MetaObservable(Long id, Long postPage, Long picPage) {
        this.id = id;
        this.postPage = postPage;
        this.picPage = picPage;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Bindable
    public Long getPostPage() {
        return postPage;
    }

    public void setPostPage(Long postPage) {
        if ((this.postPage == null && postPage != null)
                || (this.postPage != null && !this.postPage.equals(postPage))) {
            this.postPage = postPage;
            notifyPropertyChanged(BR.postPage);
        }
    }

    @Bindable
    public Long getPicPage() {
        return picPage;
    }

    public void setPicPage(Long picPage) {
        if ((this.picPage == null && picPage != null)
                || (this.picPage != null && !this.picPage.equals(picPage))) {
            this.picPage = picPage;
            notifyPropertyChanged(BR.picPage);
        }
    }


    /**
     * convert entity to entityObservable
     */
    public MetaObservable(Meta entity) {
        this.id = entity.getId();
        this.postPage = entity.getPostPage();
        this.picPage = entity.getPicPage();
    }

    @Override
    public Long getModelKey() {
        return this.getId();
    }

    @Override
    public void refresh(Meta entity) {
        List<Integer> propertyChanges = new ArrayList<>();
        this.id = entity.getId();
        if ((this.postPage == null && entity.getPostPage() != null)
                || (this.postPage != null && !this.postPage.equals(entity.getPostPage()))) {
            this.postPage = entity.getPostPage();
            propertyChanges.add(BR.postPage);
        }
        if ((this.picPage == null && entity.getPicPage() != null)
                || (this.picPage != null && !this.picPage.equals(entity.getPicPage()))) {
            this.picPage = entity.getPicPage();
            propertyChanges.add(BR.picPage);
        }

        if (propertyChanges.size() == 1) {
            notifyPropertyChanged(propertyChanges.get(0));
        } else if (propertyChanges.size() > 1) {
            notifyChange();
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
