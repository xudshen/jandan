package info.xudshen.jandan.data.model.observable;

import info.xudshen.data.BR;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import info.xudshen.droiddata.dao.IModelObservable;
import java.util.ArrayList;
import java.util.List;

import android.databinding.Bindable;

import info.xudshen.jandan.domain.model.Category;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * IModelObservable<"CATEGORY">
 */
public class CategoryObservable extends android.databinding.BaseObservable  implements IModelObservable<Category> {

    private Long id;
    @Expose
    @SerializedName("id")
    private Long categoryId;
    @Expose
    private String slug;
    @Expose
    private String title;
    @Expose
    private String description;
    @Expose
    private String postCount;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public CategoryObservable() {
    }

    public CategoryObservable(Long id) {
        this.id = id;
    }

    public CategoryObservable(Long id, Long categoryId, String slug, String title, String description, String postCount) {
        this.id = id;
        this.categoryId = categoryId;
        this.slug = slug;
        this.title = title;
        this.description = description;
        this.postCount = postCount;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Bindable
    public Long getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(Long categoryId) {
        if ((this.categoryId == null && categoryId != null)
                || (this.categoryId != null && !this.categoryId.equals(categoryId))) {
            this.categoryId = categoryId;
            notifyPropertyChanged(BR.categoryId);
        }
    }

    @Bindable
    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        if ((this.slug == null && slug != null)
                || (this.slug != null && !this.slug.equals(slug))) {
            this.slug = slug;
            notifyPropertyChanged(BR.slug);
        }
    }

    @Bindable
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        if ((this.title == null && title != null)
                || (this.title != null && !this.title.equals(title))) {
            this.title = title;
            notifyPropertyChanged(BR.title);
        }
    }

    @Bindable
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        if ((this.description == null && description != null)
                || (this.description != null && !this.description.equals(description))) {
            this.description = description;
            notifyPropertyChanged(BR.description);
        }
    }

    @Bindable
    public String getPostCount() {
        return postCount;
    }

    public void setPostCount(String postCount) {
        if ((this.postCount == null && postCount != null)
                || (this.postCount != null && !this.postCount.equals(postCount))) {
            this.postCount = postCount;
            notifyPropertyChanged(BR.postCount);
        }
    }


    /**
     * convert entity to entityObservable
     */
    public CategoryObservable(Category entity) {
        this.id = entity.getId();
        this.categoryId = entity.getCategoryId();
        this.slug = entity.getSlug();
        this.title = entity.getTitle();
        this.description = entity.getDescription();
        this.postCount = entity.getPostCount();
    }

    @Override
    public Long getModelKey() {
        return this.getId();
    }

    @Override
    public void refresh(Category entity) {
        List<Integer> propertyChanges = new ArrayList<>();
        this.id = entity.getId();
        if ((this.categoryId == null && entity.getCategoryId() != null)
                || (this.categoryId != null && !this.categoryId.equals(entity.getCategoryId()))) {
            this.categoryId = entity.getCategoryId();
            propertyChanges.add(BR.categoryId);
        }
        if ((this.slug == null && entity.getSlug() != null)
                || (this.slug != null && !this.slug.equals(entity.getSlug()))) {
            this.slug = entity.getSlug();
            propertyChanges.add(BR.slug);
        }
        if ((this.title == null && entity.getTitle() != null)
                || (this.title != null && !this.title.equals(entity.getTitle()))) {
            this.title = entity.getTitle();
            propertyChanges.add(BR.title);
        }
        if ((this.description == null && entity.getDescription() != null)
                || (this.description != null && !this.description.equals(entity.getDescription()))) {
            this.description = entity.getDescription();
            propertyChanges.add(BR.description);
        }
        if ((this.postCount == null && entity.getPostCount() != null)
                || (this.postCount != null && !this.postCount.equals(entity.getPostCount()))) {
            this.postCount = entity.getPostCount();
            propertyChanges.add(BR.postCount);
        }

        if (propertyChanges.size() == 1) {
            notifyPropertyChanged(propertyChanges.get(0));
        } else if (propertyChanges.size() > 1) {
            notifyChange();
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
