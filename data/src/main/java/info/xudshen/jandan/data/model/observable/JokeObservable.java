package info.xudshen.jandan.data.model.observable;

import info.xudshen.data.BR;

import com.google.gson.annotations.Expose;
import info.xudshen.droiddata.dao.IModelObservable;
import java.util.ArrayList;
import java.util.List;

import android.databinding.Bindable;

import info.xudshen.jandan.domain.model.Joke;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * IModelObservable<"JOKE">
 */
public class JokeObservable extends android.databinding.BaseObservable  implements IModelObservable<Joke> {

    private Long id;
    @Expose
    private Long jokeId;
    @Expose
    private String author;
    @Expose
    private String content;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public JokeObservable() {
    }

    public JokeObservable(Long id) {
        this.id = id;
    }

    public JokeObservable(Long id, Long jokeId, String author, String content) {
        this.id = id;
        this.jokeId = jokeId;
        this.author = author;
        this.content = content;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getJokeId() {
        return jokeId;
    }

    public void setJokeId(Long jokeId) {
        this.jokeId = jokeId;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    @Bindable
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        if ((this.content == null && content != null)
                || (this.content != null && !this.content.equals(content))) {
            this.content = content;
            notifyPropertyChanged(BR.content);
        }
    }


    /**
     * convert entity to entityObservable
     */
    public JokeObservable(Joke entity) {
        this.id = entity.getId();
        this.jokeId = entity.getJokeId();
        this.author = entity.getAuthor();
        this.content = entity.getContent();
    }

    @Override
    public Long getModelKey() {
        return this.getId();
    }

    @Override
    public void refresh(Joke entity) {
        List<Integer> propertyChanges = new ArrayList<>();
        this.id = entity.getId();
        this.jokeId = entity.getJokeId();
        this.author = entity.getAuthor();
        if ((this.content == null && entity.getContent() != null)
                || (this.content != null && !this.content.equals(entity.getContent()))) {
            this.content = entity.getContent();
            propertyChanges.add(BR.content);
        }

        if (propertyChanges.size() == 1) {
            notifyPropertyChanged(propertyChanges.get(0));
        } else if (propertyChanges.size() > 1) {
            notifyChange();
        }
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
