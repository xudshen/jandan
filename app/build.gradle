apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.databinding'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId "info.xudshen.jandan"
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    retrolambda {
        jdk globalConfiguration.getAt("jdk")
        oldJdk globalConfiguration.getAt("oldJdk")
        javaVersion JavaVersion.VERSION_1_7
    }

    lintOptions {
        disable 'InvalidPackage', 'UnusedAttribute', 'ValidFragment', 'GradleDependency', 'MissingPrefix'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    dexOptions {
        preDexLibraries = false
        incremental true
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
        }
    }
}

dependencies {
    def dependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.appTestDependencies

    compile project(':data')

    apt dependencies.androidBinding

    compile dependencies.multiDex

    compile dependencies.support_v4
    compile dependencies.appcompat_v7
    compile dependencies.recyclerview
    compile dependencies.cardview
    compile dependencies.gridlayout
    compile dependencies.palette
    compile dependencies.preference
    compile dependencies.design
    compile dependencies.percent

    apt dependencies.daggerCompiler
    compile dependencies.daggerCompiler
    compile dependencies.dagger
    provided dependencies.javaxAnnotation

    compile dependencies.rxJava
    compile dependencies.rxAndroid
    compile dependencies.butterKnife
    compile dependencies.gson

    compile dependencies.retrofit
    compile dependencies.picasso

    compile dependencies.logbackCore
    compile dependencies.logbackClassic
    compile dependencies.slf4j

    compile dependencies.freemarker
    
    compile dependencies.swipy
    compile('com.mikepenz:materialdrawer:4.6.3@aar') {
        transitive = true
    }
    compile 'com.mikepenz:google-material-typeface:2.1.0.1.original@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.5.0.1@aar'
    compile ('com.github.florent37:materialviewpager:1.1.3@aar'){
        transitive = true
    }

    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile testDependencies.mockito
    androidTestCompile testDependencies.dexmaker
    androidTestCompile testDependencies.dexmakerMockito
    androidTestCompile testDependencies.espresso
    androidTestCompile testDependencies.testingSupportLib

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1' // or 1.4-beta1
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta1
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta1
}
